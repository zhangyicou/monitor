<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<aop:aspectj-autoproxy/>
	<context:annotation-config />
	<context:component-scan base-package="com.tlong.service.*;com.tlong.dao.*;com.tlong.quartz" />
	<!-- spring加载资源文件 -->
	<context:property-placeholder location="classpath:*.properties"/>
	
	<!-- 声明通知类 -->
    <bean id="aspectAdvice" class="com.tlong.aopadvice.AspectAdvice" >
    	<property name="monitorUrl" value="${monitor.url}"></property>
    </bean>
    <aop:config>
        <aop:aspect id="aspectAdviceId" ref="aspectAdvice">
        	<aop:around method="doAround" pointcut="execution(public * code.main.*.service.*.*(..))"/>
        	</aop:aspect>
    </aop:config>
    <!--备份<aop:config>
        <aop:aspect id="aspectAdviceId1" ref="aspectAdvice">
        	<aop:before method="doBefore" 
        		pointcut="execution(public * com.tlong.service.impl.*.getList(..)) 
        				and !execution(public * com.tlong.service.impl.*.add(..))"/>
        	<aop:after-returning method="doAfter" pointcut="execution(public * com.tlong.service.impl.*.getList(..)) 
        				and !execution(public * com.tlong.service.impl.*.add(..))" returning="result"/>
        	<aop:around method="doAround" pointcut="execution(public * code.main.*.service.*.*(..))"/>
        	<aop:after-throwing method="doThrow" pointcut="execution(public * com.tlong.service.impl.*.getList(..)) 
        				and !execution(public * com.tlong.service.impl.*.add(..))" throwing="e"/>
        </aop:aspect>
    </aop:config>-->
    <!-- aop注解 end -->
	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.user}" />
		<property name="password" value="${datasource.password}" />
		<property name="minPoolSize" value="${datasource.minPoolSize}" />
		<property name="maxPoolSize" value="${datasource.maxPoolSize}" />
		<property name="maxIdleTime" value="${datasource.maxIdleTime}" />
		<property name="acquireIncrement" value="${datasource.acquireIncrement}" />
		<property name="maxStatements" value="${datasource.maxStatements}" />
		<property name="initialPoolSize" value="${datasource.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${datasource.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${datasource.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${datasource.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${datasource.testConnectionOnCheckout}" />
	</bean>

	<!-- hibernate sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.characterEncoding">${hibernate.connection.characterEncoding}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
				<prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">${hibernate.cglib.use_reflection_optimizer}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.tlong.entity" />
	</bean>

    <!--配置transactionManager-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!--配置注解声明事务-->
	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />
</beans>